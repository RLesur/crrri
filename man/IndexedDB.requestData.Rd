% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_IndexedDB.R
\name{IndexedDB.requestData}
\alias{IndexedDB.requestData}
\title{Send the command IndexedDB.requestData}
\usage{
IndexedDB.requestData(promise, securityOrigin, databaseName,
  objectStoreName, indexName, skipCount, pageSize, keyRange = NULL,
  awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{securityOrigin}{A character string.
Security origin.}

\item{databaseName}{A character string.
Database name.}

\item{objectStoreName}{A character string.
Object store name.}

\item{indexName}{A character string.
Index name, empty string for object store data requests.}

\item{skipCount}{An integer.
Number of records to skip.}

\item{pageSize}{An integer.
Number of records to fetch.}

\item{keyRange}{Optional. A KeyRange.
Key range.}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a named list of length 2.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Requests data from object store or index.
}
