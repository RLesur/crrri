% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_Debugger.R
\name{Debugger.evaluateOnCallFrame}
\alias{Debugger.evaluateOnCallFrame}
\title{Send the command Debugger.evaluateOnCallFrame}
\usage{
Debugger.evaluateOnCallFrame(promise, callFrameId, expression,
  objectGroup = NULL, includeCommandLineAPI = NULL, silent = NULL,
  returnByValue = NULL, generatePreview = NULL,
  throwOnSideEffect = NULL, timeout = NULL, awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{callFrameId}{A CallFrameId.
Call frame identifier to evaluate on.}

\item{expression}{A character string.
Expression to evaluate.}

\item{objectGroup}{Optional. A character string.
String object group name to put result into (allows rapid releasing resulting object handles
using \code{releaseObjectGroup}).}

\item{includeCommandLineAPI}{Optional. A logical.
Specifies whether command line API should be available to the evaluated expression, defaults
to false.}

\item{silent}{Optional. A logical.
In silent mode exceptions thrown during evaluation are not reported and do not pause
execution. Overrides \code{setPauseOnException} state.}

\item{returnByValue}{Optional. A logical.
Whether the result is expected to be a JSON object that should be sent by value.}

\item{generatePreview}{Experimental. Optional. A logical.
Whether preview should be generated for the result.}

\item{throwOnSideEffect}{Optional. A logical.
Whether to throw an exception if side effect cannot be ruled out during evaluation.}

\item{timeout}{Experimental. Optional. A Runtime.TimeDelta.
Terminate execution after timing out (number of milliseconds).}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a named list of length 2.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Evaluates expression on a given call frame.
}
