% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_Runtime.R
\name{Runtime.addBinding}
\alias{Runtime.addBinding}
\title{Send the command Runtime.addBinding}
\usage{
Runtime.addBinding(promise, name, executionContextId = NULL,
  awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{name}{A character string.}

\item{executionContextId}{Optional. A ExecutionContextId.}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a void named list.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
If executionContextId is empty, adds binding with the given name on the
global objects of all inspected contexts, including those created later,
bindings survive reloads.
If executionContextId is specified, adds binding only on global object of
given execution context.
Binding function takes exactly one argument, this argument should be string,
in case of any other input, function throws an exception.
Each binding function call produces Runtime.bindingCalled notification.
}
