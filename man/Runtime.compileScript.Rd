% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_Runtime.R
\name{Runtime.compileScript}
\alias{Runtime.compileScript}
\title{Send the command Runtime.compileScript}
\usage{
Runtime.compileScript(promise, expression, sourceURL, persistScript,
  executionContextId = NULL, awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{expression}{A character string.
Expression to compile.}

\item{sourceURL}{A character string.
Source url to be set for the script.}

\item{persistScript}{A logical.
Specifies whether the compiled script should be persisted.}

\item{executionContextId}{Optional. A ExecutionContextId.
Specifies in which execution context to perform script run. If the parameter is omitted the
evaluation will be performed in the context of the inspected page.}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a named list of length 2.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Compiles expression.
}
