% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_Debugger.R
\name{Debugger.setVariableValue}
\alias{Debugger.setVariableValue}
\title{Send the command Debugger.setVariableValue}
\usage{
Debugger.setVariableValue(promise, scopeNumber, variableName, newValue,
  callFrameId, awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{scopeNumber}{An integer.
0-based number of scope as was listed in scope chain. Only 'local', 'closure' and 'catch'
scope types are allowed. Other scopes could be manipulated manually.}

\item{variableName}{A character string.
Variable name.}

\item{newValue}{A Runtime.CallArgument.
New variable value.}

\item{callFrameId}{A CallFrameId.
Id of callframe that holds variable.}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a void named list.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Changes value of variable in a callframe. Object-based scopes are not supported and must be
mutated manually.
}
