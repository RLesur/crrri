% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_Debugger.R
\name{Debugger.getPossibleBreakpoints}
\alias{Debugger.getPossibleBreakpoints}
\title{Send the command Debugger.getPossibleBreakpoints}
\usage{
Debugger.getPossibleBreakpoints(promise, start, end = NULL,
  restrictToFunction = NULL, awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{start}{A Location.
Start of range to search possible breakpoint locations in.}

\item{end}{Optional. A Location.
End of range to search possible breakpoint locations in (excluding). When not specified, end
of scripts is used as end of range.}

\item{restrictToFunction}{Optional. A logical.
Only consider locations which are in the same (non-nested) function as start.}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a named list of length 1.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Returns possible locations for breakpoint. scriptId in start and end range locations should be
the same.
}
