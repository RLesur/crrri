% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_Network.R
\name{Network.continueInterceptedRequest}
\alias{Network.continueInterceptedRequest}
\title{Send the command Network.continueInterceptedRequest}
\usage{
Network.continueInterceptedRequest(promise, interceptionId,
  errorReason = NULL, rawResponse = NULL, url = NULL,
  method = NULL, postData = NULL, headers = NULL,
  authChallengeResponse = NULL, awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{interceptionId}{A InterceptionId.}

\item{errorReason}{Optional. A ErrorReason.
If set this causes the request to fail with the given reason. Passing \code{Aborted} for requests
marked with \code{isNavigationRequest} also cancels the navigation. Must not be set in response
to an authChallenge.}

\item{rawResponse}{Optional. A character string.
If set the requests completes using with the provided base64 encoded raw response, including
HTTP status line and headers etc... Must not be set in response to an authChallenge.}

\item{url}{Optional. A character string.
If set the request url will be modified in a way that's not observable by page. Must not be
set in response to an authChallenge.}

\item{method}{Optional. A character string.
If set this allows the request method to be overridden. Must not be set in response to an
authChallenge.}

\item{postData}{Optional. A character string.
If set this allows postData to be set. Must not be set in response to an authChallenge.}

\item{headers}{Optional. A Headers.
If set this allows the request headers to be changed. Must not be set in response to an
authChallenge.}

\item{authChallengeResponse}{Optional. A AuthChallengeResponse.
Response to a requestIntercepted with an authChallenge. Must not be set otherwise.}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a void named list.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Response to Network.requestIntercepted which either modifies the request to continue with any
modifications, or blocks it, or completes it with the provided response bytes. If a network
fetch occurs as a result which encounters a redirect an additional Network.requestIntercepted
event will be sent with the same InterceptionId.
}
