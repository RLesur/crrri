% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_Target.R
\name{Target.exposeDevToolsProtocol}
\alias{Target.exposeDevToolsProtocol}
\title{Send the command Target.exposeDevToolsProtocol}
\usage{
Target.exposeDevToolsProtocol(promise, targetId, bindingName = NULL,
  awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{targetId}{A TargetID.}

\item{bindingName}{Optional. A character string.
Binding name, 'cdp' if not specified.}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a void named list.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Inject object to the target's main frame that provides a communication
channel with browser target.\preformatted{   Injected object will be available as `window[bindingName]`.
   
   The object has the follwing API:
   - `binding.send(json)` - a method to send messages over the remote debugging protocol
   - `binding.onmessage = json => handleMessage(json)` - a callback that will be called for the protocol notifications and command responses.
}
}
