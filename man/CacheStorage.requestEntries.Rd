% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_CacheStorage.R
\name{CacheStorage.requestEntries}
\alias{CacheStorage.requestEntries}
\title{Send the command CacheStorage.requestEntries}
\usage{
CacheStorage.requestEntries(promise, cacheId, skipCount, pageSize,
  awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{cacheId}{A CacheId.
ID of cache to get entries from.}

\item{skipCount}{An integer.
Number of records to skip.}

\item{pageSize}{An integer.
Number of records to fetch.}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a named list of length 2.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Requests data from cache.
}
