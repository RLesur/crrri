% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_Target.R
\name{Target.setAutoAttach}
\alias{Target.setAutoAttach}
\title{Send the command Target.setAutoAttach}
\usage{
Target.setAutoAttach(promise, autoAttach, waitForDebuggerOnStart,
  flatten = NULL, awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{autoAttach}{A logical.
Whether to auto-attach to related targets.}

\item{waitForDebuggerOnStart}{A logical.
Whether to pause new targets when attaching to them. Use \code{Runtime.runIfWaitingForDebugger}
to run paused targets.}

\item{flatten}{Experimental. Optional. A logical.
Enables "flat" access to the session via specifying sessionId attribute in the commands.}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a void named list.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Controls whether to automatically attach to new targets which are considered to be related to
this one. When turned on, attaches to all existing related targets as well. When turned off,
automatically detaches from all currently attached targets.
}
