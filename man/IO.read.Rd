% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_IO.R
\name{IO.read}
\alias{IO.read}
\title{Send the command IO.read}
\usage{
IO.read(promise, handle, offset = NULL, size = NULL,
  awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{handle}{A StreamHandle.
Handle of the stream to read.}

\item{offset}{Optional. An integer.
Seek to the specified offset before reading (if not specificed, proceed with offset
following the last read). Some types of streams may only support sequential reads.}

\item{size}{Optional. An integer.
Maximum number of bytes to read (left upon the agent discretion if not specified).}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a named list of length 3.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Read a chunk of the stream
}
