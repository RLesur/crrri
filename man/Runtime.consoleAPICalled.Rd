% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/events_Runtime.R
\name{Runtime.consoleAPICalled}
\alias{Runtime.consoleAPICalled}
\title{Await the event Runtime.consoleAPICalled or create a callback}
\usage{
Runtime.consoleAPICalled(promise, type = NULL, args = NULL,
  executionContextId = NULL, timestamp = NULL, stackTrace = NULL,
  context = NULL, .callback = NULL)
}
\arguments{
\item{promise}{An asynchronous result object.}

\item{type}{A character string.
Type of the call. Accepted values: \code{~ .res$type} (to refer to the previous result), log, debug, info, error, warning, dir, dirxml, table, trace, clear, startGroup, startGroupCollapsed, endGroup, assert, profile, profileEnd, count, timeEnd.}

\item{args}{A list of RemoteObject.
Call arguments. Accepted values: \code{~ .res$args} (to refer to the previous result).}

\item{executionContextId}{A ExecutionContextId.
Identifier of the context where the call was made. Accepted values: \code{~ .res$executionContextId} (to refer to the previous result).}

\item{timestamp}{A Timestamp.
Call timestamp. Accepted values: \code{~ .res$timestamp} (to refer to the previous result).}

\item{stackTrace}{A StackTrace.
Stack trace captured when the call was made. Accepted values: \code{~ .res$stackTrace} (to refer to the previous result).}

\item{context}{Experimental. A character string.
Console context descriptor for calls on non-default console context (not console.*):
'anonymous#unique-logger-id' for call on unnamed context, 'name#unique-logger-id' for call
on named context. Accepted values: \code{~ .res$context} (to refer to the previous result).}

\item{.callback}{A callback function taking one argument. The object passed to
this function is the message received from Chrome: this is a named list
with an element \code{method} (that is equal to \code{"consoleAPICalled"})
and an element \code{params} which is a named list.
The \code{params} list is composed of
the following element(s): \code{type}, \code{args}, \code{executionContextId}, \code{timestamp}, \code{stackTrace} (optional) , \code{context} (optional) .}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the use of a callback function.
When \code{.callback} is \code{NULL}, the promise is fulfilled when the event is received.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
\code{result} is a named list: its elements are the parameters sended by Chrome.
You can chain this promise with another command or event listener.
When \code{.callback} is not \code{NULL}, the promise is fulfilled as soon as the callback is created; the value
is a function without any argument that can be called to cancel the callback. When you use the
\code{.callback} argument, you cannot send the result to any other command or event listener.
}
\description{
\strong{Event description}:
Issued when console API was called.
}
