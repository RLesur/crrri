% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_Input.R
\name{Input.emulateTouchFromMouseEvent}
\alias{Input.emulateTouchFromMouseEvent}
\title{Send the command Input.emulateTouchFromMouseEvent}
\usage{
Input.emulateTouchFromMouseEvent(promise, type, x, y, button,
  timestamp = NULL, deltaX = NULL, deltaY = NULL, modifiers = NULL,
  clickCount = NULL, awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{type}{A character string.
Type of the mouse event. Accepted values: mousePressed, mouseReleased, mouseMoved, mouseWheel.}

\item{x}{An integer.
X coordinate of the mouse pointer in DIP.}

\item{y}{An integer.
Y coordinate of the mouse pointer in DIP.}

\item{button}{A character string.
Mouse button. Accepted values: none, left, middle, right.}

\item{timestamp}{Optional. A TimeSinceEpoch.
Time at which the event occurred (default: current time).}

\item{deltaX}{Optional. A numeric.
X delta in DIP for mouse wheel event (default: 0).}

\item{deltaY}{Optional. A numeric.
Y delta in DIP for mouse wheel event (default: 0).}

\item{modifiers}{Optional. An integer.
Bit field representing pressed modifier keys. Alt=1, Ctrl=2, Meta/Command=4, Shift=8
(default: 0).}

\item{clickCount}{Optional. An integer.
Number of times the mouse button was clicked (default: 0).}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a void named list.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Emulates touch event from the mouse event parameters.
}
