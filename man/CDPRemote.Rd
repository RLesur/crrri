% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CDPRemote.R
\name{CDPRemote}
\alias{CDPRemote}
\title{Declare a remote application implementing the Chrome Debugging Protocol}
\description{
This class aims to declare an application implementing the Chrome Debugging
Protocol. It possesses methods to manage connections.
}
\section{Usage}{
\preformatted{remote <- CDPRemote$new(host = "localhost", debug_port = 9222, secure = FALSE,
                        local = FALSE, retry_delay = 0.2, max_attempts = 15L)

remote$connect(callback = NULL)
remote$listConnections()
remote$closeConnections(callback = NULL)
remote$version()
remote$user_agent
}
}

\section{Arguments}{

\itemize{
\item \code{remote}: an object representing a remote application implementing the
Chrome Debugging Protocol.
\item \code{host}: Character scalar, the host name of the application.
\item \code{debug_port}: Numeric scalar, the remote debugging port.
\item \code{secure}: Logical scalar, indicating whether the https/wss protocols
shall be used for connecting to the remote application.
\item \code{local}: Logical scalar, indicating whether the local version of the
protocol (embedded in \code{crrri}) must be used or the protocol must be
fetched \emph{remotely}.
\item \code{retry_delay}: Number, delay in seconds between two successive tries to
connect to the remote application.
\item \code{max_attempts}: Logical scalar, number of tries to connect to headless
Chromium/Chrome.
\item \code{callback}: Function with one argument.
}
}

\section{Details}{

\code{$new()} declares a new remote application.

\code{$connect(callback = NULL)} connects the R session to the remote application.
The returned value depends on the value of the \code{callback} argument. When
\code{callback} is a function, the returned value is a connection object. When
\code{callback} is \code{NULL} the returned value is a promise which fulfills once R
is connected to the remote application. Once fulfilled, the value of this
promise is the connection object.

\code{$listConnections()} returns a list of the connection objects succesfully
created using the \code{$connect()} method.

\code{$closeConnections(callback = NULL)} closes all the connections created using
the \code{$connect()} method. If \code{callback} is \code{NULL}, it returns a promise which
fulfills when all the connections are closed: once fulfilled, its value is the
remote object.
If \code{callback} is not \code{NULL}, it returns the remote object. In this case,
\code{callback} is called when all the connections are closed and the remote object is
passed to this function as the argument.

\code{$version()} executes the DevTools \code{Version} method. It returns a list of
informations available at \code{http://<host>:<debug_port>/json/version}.

\code{$user_agent} returns a character scalar with the User Agent of the
remote application.

\code{$listTargets()} returns a list with information about targets (or tabs).
}

\examples{
\dontrun{
# Assuming that an application is already running at http://localhost:9222
# For instance, you can execute:
# chrome <- Chrome$new()

remote <- CDPRemote$new()

remote$connect() \%...>\% (function(client) {
  Page <- client$Page
  Runtime <- client$Runtime

  Page$enable() \%...>\% {
    Page$navigate(url = 'http://r-project.org')
  } \%...>\% {
    Page$loadEventFired()
  } \%...>\% {
    Runtime$evaluate(
      expression = 'document.documentElement.outerHTML'
    )
  } \%...>\% (function(result) {
    cat(result$result$value, "\\n")
  }) \%...!\% {
    cat("Error:", .$message, "\\n")
  } \%>\%
  promises::finally(~ client$disconnect())
}) \%...!\% {
  cat("Error:", .$message, "\\n")
}
}

}
