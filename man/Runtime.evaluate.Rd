% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_Runtime.R
\name{Runtime.evaluate}
\alias{Runtime.evaluate}
\title{Send the command Runtime.evaluate}
\usage{
Runtime.evaluate(promise, expression, objectGroup = NULL,
  includeCommandLineAPI = NULL, silent = NULL, contextId = NULL,
  returnByValue = NULL, generatePreview = NULL, userGesture = NULL,
  awaitPromise = NULL, throwOnSideEffect = NULL, timeout = NULL,
  awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{expression}{A character string.
Expression to evaluate.}

\item{objectGroup}{Optional. A character string.
Symbolic group name that can be used to release multiple objects.}

\item{includeCommandLineAPI}{Optional. A logical.
Determines whether Command Line API should be available during the evaluation.}

\item{silent}{Optional. A logical.
In silent mode exceptions thrown during evaluation are not reported and do not pause
execution. Overrides \code{setPauseOnException} state.}

\item{contextId}{Optional. A ExecutionContextId.
Specifies in which execution context to perform evaluation. If the parameter is omitted the
evaluation will be performed in the context of the inspected page.}

\item{returnByValue}{Optional. A logical.
Whether the result is expected to be a JSON object that should be sent by value.}

\item{generatePreview}{Experimental. Optional. A logical.
Whether preview should be generated for the result.}

\item{userGesture}{Optional. A logical.
Whether execution should be treated as initiated by user in the UI.}

\item{awaitPromise}{Optional. A logical.
Whether execution should \code{await} for resulting value and return once awaited promise is
resolved.}

\item{throwOnSideEffect}{Experimental. Optional. A logical.
Whether to throw an exception if side effect cannot be ruled out during evaluation.}

\item{timeout}{Experimental. Optional. A TimeDelta.
Terminate execution after timing out (number of milliseconds).}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a named list of length 2.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Evaluates expression on global object.
}
