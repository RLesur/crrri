% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/commands_Emulation.R
\name{Emulation.setDeviceMetricsOverride}
\alias{Emulation.setDeviceMetricsOverride}
\title{Send the command Emulation.setDeviceMetricsOverride}
\usage{
Emulation.setDeviceMetricsOverride(promise, width, height,
  deviceScaleFactor, mobile, scale = NULL, screenWidth = NULL,
  screenHeight = NULL, positionX = NULL, positionY = NULL,
  dontSetVisibleSize = NULL, screenOrientation = NULL,
  viewport = NULL, awaitResult = TRUE)
}
\arguments{
\item{promise}{An asynchronous result.}

\item{width}{An integer.
Overriding width value in pixels (minimum 0, maximum 10000000). 0 disables the override.}

\item{height}{An integer.
Overriding height value in pixels (minimum 0, maximum 10000000). 0 disables the override.}

\item{deviceScaleFactor}{A numeric.
Overriding device scale factor value. 0 disables the override.}

\item{mobile}{A logical.
Whether to emulate mobile device. This includes viewport meta tag, overlay scrollbars, text
autosizing and more.}

\item{scale}{Experimental. Optional. A numeric.
Scale to apply to resulting view image.}

\item{screenWidth}{Experimental. Optional. An integer.
Overriding screen width value in pixels (minimum 0, maximum 10000000).}

\item{screenHeight}{Experimental. Optional. An integer.
Overriding screen height value in pixels (minimum 0, maximum 10000000).}

\item{positionX}{Experimental. Optional. An integer.
Overriding view X position on screen in pixels (minimum 0, maximum 10000000).}

\item{positionY}{Experimental. Optional. An integer.
Overriding view Y position on screen in pixels (minimum 0, maximum 10000000).}

\item{dontSetVisibleSize}{Experimental. Optional. A logical.
Do not set visible view size, rely upon explicit setVisibleSize call.}

\item{screenOrientation}{Optional. A ScreenOrientation.
Screen orientation override.}

\item{viewport}{Experimental. Optional. A Page.Viewport.
If set, the visible area of the page will be overridden to this viewport. This viewport
change is not observed by the page, e.g. viewport-relative elements do not change positions.}

\item{awaitResult}{Await for the command result?}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the value of \code{awaitResult}.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
When \code{awaitResult} is \code{TRUE}, the promise is fulfilled once the result of the command is received. In this case,
\code{result} is a void named list.
When \code{awaitResult} is \code{FALSE}, the promise is fulfilled once the command is sent:
\code{result} is equal to the previous result (\code{promise$result}).
In both cases, you can chain this promise with another command or event listener.
}
\description{
Overrides the values of device screen dimensions (window.screen.width, window.screen.height,
window.innerWidth, window.innerHeight, and "device-width"/"device-height"-related CSS media
query results).
}
