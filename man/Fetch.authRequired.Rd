% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/events_Fetch.R
\name{Fetch.authRequired}
\alias{Fetch.authRequired}
\title{Await the event Fetch.authRequired or create a callback}
\usage{
Fetch.authRequired(promise, requestId = NULL, request = NULL,
  frameId = NULL, resourceType = NULL, authChallenge = NULL,
  .callback = NULL)
}
\arguments{
\item{promise}{An asynchronous result object.}

\item{requestId}{A RequestId.
Each request the page makes will have a unique id. Accepted values: \code{~ .res$requestId} (to refer to the previous result).}

\item{request}{A Network.Request.
The details of the request. Accepted values: \code{~ .res$request} (to refer to the previous result).}

\item{frameId}{A Page.FrameId.
The id of the frame that initiated the request. Accepted values: \code{~ .res$frameId} (to refer to the previous result).}

\item{resourceType}{A Network.ResourceType.
How the requested resource will be used. Accepted values: \code{~ .res$resourceType} (to refer to the previous result).}

\item{authChallenge}{A AuthChallenge.
Details of the Authorization Challenge encountered.
If this is set, client should respond with continueRequest that
contains AuthChallengeResponse. Accepted values: \code{~ .res$authChallenge} (to refer to the previous result).}

\item{.callback}{A callback function taking one argument. The object passed to
this function is the message received from Chrome: this is a named list
with an element \code{method} (that is equal to \code{"authRequired"})
and an element \code{params} which is a named list.
The \code{params} list is composed of
the following element(s): \code{requestId}, \code{request}, \code{frameId}, \code{resourceType}, \code{authChallenge}.}
}
\value{
An async value of class \code{promise}.
The value and the completion of the promise differ according to the use of a callback function.
When \code{.callback} is \code{NULL}, the promise is fulfilled when the event is received.
Its value is a named list of two elements: \code{ws} (the websocket connexion) and \code{result}.
\code{result} is a named list: its elements are the parameters sended by Chrome.
You can chain this promise with another command or event listener.
When \code{.callback} is not \code{NULL}, the promise is fulfilled as soon as the callback is created; the value
is a function without any argument that can be called to cancel the callback. When you use the
\code{.callback} argument, you cannot send the result to any other command or event listener.
}
\description{
\strong{Event description}:
Issued when the domain is enabled with handleAuthRequests set to true.
The request is paused until client responds with continueWithAuth.
}
